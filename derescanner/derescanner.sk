#DereScanner 1.0 skript by DereWah -> https://t.me/skriptitaly
#Language: EN

#COMMANDS
#/derescan | derescan.use | access to the main command
#/derescan get | derescan.get | receive a scan item.
#/derescan accept | derescan.use | accept a scanning request.


Options:
	p: &7[&9&lDere&b&lScanner&7] #Skript Prefix
	item: stick #Scanner item
	item_name: &bInventory Scanner #Scanner item name
	item_lore: &7Click on a player to%nl%&7scan their inventory. #Scanner item description
	expire: 15 #SECONDS | Expire cooldown of a scan request, in SECONDS. Put this as an integer.
	credits: true #Dev credits


command /derescan [<text>] [<offlineplayer>]:
	aliases: /controllo, /scan, /derecheck
	permission: derescan.use
	permission message: {@p} &cYou don't have the permission &4derescan.use&c.
	trigger:
		if arg-1 is "accept":
			if arg-2 is set:
				if {derescan::player::%arg-2%::asking::%player%} is true:
					scanInventory(arg-2, player)
				else:
					send message "{@p} &cThis player hasn't asked to scan you."
			else:
				send message "{@p} &cSpecificy the player."
		else:
			if player has permission "derescan.get":
				add 1 of instanceChecker() to player's inventory
				send message "{@p} &7You have received an inventory scaner item."
			else:
				send message "{@p} &cYou do not have the permission &4derescan.get&c."
		
		
on rightclick on player:
	if player's tool is instanceScanner():
		if {derescan::player::%player%::asking::%entity%} is not true:
			set {derescan::player::%player%::asking::%entity%} to true
			send message formatted "{@p} &8%player%&7 wants to scan your inventory. <cmd:/scan accept %player%>&7[&8&lACCEPT&7]<reset>" to entity
			send message "{@p} &7You have requested to scan &8%entity%&7's inventory." to player
			set {_c} to 0
			while {_c} < {@expire}:
				add 1 to {_c}
				wait 1 second
				if {derescan::player::%player%::asking::%entity%} is not true:
					stop
			if {derescan::player::%player%::asking::%entity%} is true:
				clear {derescan::player::%player%::asking::%entity%}
				send message "{@p} &7Your request to scan &8%entity%&7's inventory has expired." to player
				send message "{@p} &8%player%&7's request to scan your inventory has expired." to entity
		else:
			send message "{@p} &7You are already trying to scan this player inventory..." to player	

function scanInventory(a: offlineplayer, v: offlineplayer):
	clear {derescan::player::%{_a}%::asking::%{_v}%}
	
	set {_gui} to a new chest inventory with 4 row with name "{@p}"
	set {_x} to 0
	loop {_v}'s inventory:
		set slot {_x} of {_gui} to loop-value
		add 1 to {_x}
	send message "{@p} &7You are now scaning &8%{_v}%&7's inventory." to {_a}
	send message "{@p} &8%{_a}%&7 is now scaning your inventory." to {_v}
	open {_gui} to {_a}

function instanceScanner() :: item:
	set {_item} to {@item}
	set {_item}'s name to "{@item_name}"
	set {_item}'s lore to "{@item_lore}"
	return {_item}
	
on inventory click:
	if event-inventory's name is "{@p}":
		cancel event
		
on join:
	wait 1 second
	if {@credits} is true:
		send message formatted "{@p}&b Plugin by &9<link:https://t.me/skriptitaly>DereWah &b[&9&nLINK&b]<reset>"